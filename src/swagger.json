{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "ძირითადი URL არის https://ecommerse--watamasheba.herokuapp.com/",
        "description": "E-commerse project with nodeJs & TypeORM"
    },
    "servers": [
        {
            "url": "/",
            "description": "ლოკალური სერვერი ან ჰეროკუ"
        },
        {
            "url": "/api/",
            "description": "docker-compose და nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "API for login&auth"
        },
        {
            "name": "Product",
            "description": "API for product actions"
        },
        {
            "name": "Cart",
            "description": "API for cart products actions"
        }
    ],
    "paths": {
        "/types": {
            "get": {
                "tags":["Product"],
                "summary": "პროდუქტის ტიპების Id-ების დათვალიერება",
                "responses": {
                    "200": {
                        "description": "A successful response"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags":["Product"],
                "summary": "ყველა პროდუქტის მიღება",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "description": "პროდუქტის ტიპის მითითება (იგულისხმება ტიპები რომლებიც მაღლა როუტში მოიცემა)",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response"
                    }
                }
            }
        },
        "/product": {
            "post": {
                "tags":["Product"],
                "summary": "ახალი პროდუქტის დამატება",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Failed, Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "tags":["Product"],
                "summary": "პროდუქტის მიღება გადაცემული Id-ით",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id of single product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response"
                    },
                    "400": {
                        "description": "Failed, product not found"
                    }
                }
            },
            "delete": {
                "tags":["Product"],
                "summary": "პროდუქტის წაშლა Id-ით",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id of single product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successfully deleted"
                    },
                    "400": {
                        "description": "Failed"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "რეგისტრაცია",
                "description": "სახელი და გვარი ნულებადია (nullable), ხოლო დანარჩენის შევსება - აუცილებელი. იმეილის ან იუზერნეიმის უკვე არსებობის შემთხვევაში აბრუნებს ერორს უკვე არსებობსო ექაუნთი მსგავსი იმეილით ან იუზერნეიმით",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Auth object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A successful create response"
                    },
                    "400": {
                        "description": "Failed, some errors"
                    },
                    "409": {
                        "description": "User already exists"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "ავტორიზაცია",
                "description": "ავტორიზაციის შემდეგ დაბლა არსებული როუტები ღიაა მხოლოდ ავტორიზებული მომხმარებლისთვის",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Login object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Failed authorization"
                    }
                }
            }
        },
        "/auth/google-auth": {
            "post": {
                "tags": ["Auth"],
                "summary": "Google ავტორიზაციას",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/GoogleAuth"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Failed authorization"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "პაროლის აღსადგენი კოდის მოთხოვნა",
                "description": "იმეილის მითითებით ითხოვს პაროლის აღდგენის კოდს",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "email string",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/ForgotPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "put": {
                "tags": ["Auth"],
                "summary": "პაროლის აღდგენა (დარესეტება)",
                "requestBody": {
                    "description": "ითხოვს იმეილს, კოდს და ბოლოს პაროლების შეყვანას. ფრონტში უნდა მოხდეს სტეპებად: ჯერ იმეილი და კოდი. კოდიდან დადებითი სტატუსის შემთხვევაში კი გამოაჩინოს პაროლის და პაროლის აღდგენის ინფუთები",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ResetPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Failed. Bad put data."
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/auth/list": {
            "get": {
                "tags": ["Auth"],
                "summary": "იუზერების ლისთის მიღება",
                "description": "გარდა ჩვენს პონტში იუზერების დათალიერებისა სხვა მიზნობრივი დატვირთა არ აქვს. რეალობაში სიგიჟეცაა ასე ღიად პირადი ინფორს და პაროლების გამოჩენა. ",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Something happened, kind of error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "სისტემიდან გასვლა",
                "description": "მხოლოდ რიქვესთი ყოველგვარი პარამეტრის და body-ს გარეშე. ბრაუზერიდან ავტომატურად შლის ტოკენს, ხოლო ამის შემდგომ დაბლა არსებული ყველა როუტი იბლოკება",
                "responses": {
                    "200": {
                        "description": "A successful logout response"
                    },
                    "400": {
                        "description": "Something happened, kind of error"
                    },
                    "409": {
                        "description": "User already log outede"
                    }
                }
            }
        },
        "/product/files/upload": {
            "get": {
                "tags": ["Product"],
                "summary": "აქედან იტვირთება single ფაილი(ფოტო), ჯერჯერობით",
                "responses": {
                    "200": {
                        "description": "A successful response"
                    },
                    "400": {
                        "description": "Failed, product not found"
                    }
                }
            }
        },
        "/product/files/{id}": {
            "get": {
                "tags": ["Product"],
                "summary": "თითოეულ ფაილზე(ფოტოზე) წვდომა თავიანთი Id-ებით",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id of single file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response"
                    },
                    "400": {
                        "description": "Failed, product not found"
                    }
                }
            }
        },
        "/cart/": {
            "get": {
                "tags": ["Cart"],
                "summary": "ქარტში დამატებული ყველა პროდუქტის მიღება",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "დამმატებელი იუზერის Id (current user Id)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response"
                    },
                    "400": {
                        "description": "Failed, cart product not found"
                    }
                }
            },
            "post": {
                "tags": ["Cart"],
                "summary": "ქარტში პროდუქტის დამატება",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Cart object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/definitions/CartProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/cart/{id}": {
            "get": {
                "tags": ["Cart"],
                "summary": "ქართის პროდუქტის მიღება Id-ით",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id of single cart product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response"
                    },
                    "400": {
                        "description": "Failed, cart product not found"
                    }
                }
            },
            "delete": {
                "tags": ["Cart"],
                "summary": "ქარტის პროდუქტის წაშლა Id-ით",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id of single cart product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successfully deleted"
                    },
                    "400": {
                        "description": "Failed"
                    }
                }
            }
        }
    },
    "definitions": {
        "Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "typeId": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "materials": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "careInstructions": {
                    "type": "string"
                }
            }
        },
        "CartProduct": {
            "type": "object",
            "properties": {
                "productId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "GoogleAuth": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "ForgotPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "ResetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "string"
                }
            }
        }
    }
}